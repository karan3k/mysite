window.uselessGraph=class uselessGraph{constructor(data,svgname,opt={}){this.opt=this.fill_opt(opt),this.data=data.slice(0,opt.numSequences),this.data.forEach(a=>a.forEach(b=>null==b.seq_index?b.seq_index=this.data.indexOf(a):b.seq_index=b.seq_index)),this.path=opt.path?opt.path:this.find_path(this.data,opt),opt.pairwise_align_levels?this.levels=opt.levels?opt.levels:this.dna_levels(this.data):this.levels=opt.levels?opt.levels:this.find_levels(this.data),this.nodes=[],this.links=[],this.max_rank=3*this.path.length,this.svgname=svgname,this.svg_index=Array.prototype.slice.call(document.getElementsByTagName("svg")).indexOf(document.getElementById(svgname)),this.svg=d3.select("#"+this.svgname),this.svg.attr("width",this.opt.svg_width).attr("height",this.opt.height);var svgwidth=document.getElementById(this.svgname).clientWidth,svgheight=document.getElementById(this.svgname).clientHeight;this.build(),this.cleanup(this.opt.minEventPerColThreshold),null==this.opt.horizontal_spacing?this.horizontal_spacing="100%"==this.opt.width?.9*svgwidth/(this.path.length-2):.9*this.opt.width/(this.path.length-2):this.horizontal_spacing=this.opt.horizontal_spacing,null==this.opt.vertical_spacing?this.vertical_spacing=Math.min(Math.max(svgheight/(2*this.data.length),1),12):this.vertical_spacing=opt.vertical_spacing,this.node_width=this.opt.node_width_factor*this.horizontal_spacing,this.grid=this.sort_nodes_vertically(this.opt.animate),this.last_cleanup(),this.add_virtual_nodes(this.grid),this.set_nodes_y(this.grid),this.opt.guidelines&&this.draw_guidelines(),this.opt.animate?(this.position_links(250*this.opt.max_iterations),this.position_nodes(250*this.opt.max_iterations)):this.draw(),this.add_path_text(),this.opt.show_seq_names&&this.show_seq_names()}fill_opt(opt){const original_opt={guidelines:!0,animate:!1,colorbysequence:!1,forceLevelName:!1,verbose_stats:!1,verbose_ord:!0,formulate_ilp:!1,retrieve_ilp:!1,minEventPerColThreshold:1,numSequences:100,max_iterations:20,height:400,width:"100%",svg_width:"100%",link_opacity:1,node_width_factor:.2,link_stroke_width:4,padding:{top:40,left:40},colorscheme:["#E32551","#F07C19","#029DAF","#FFC219","#cd5b43"],fontSize:"0.9em",catmullromvalue:1,path_text_y:10,path:void 0,levels:void 0,pairwise_align_levels:!1,pairwise_alignment_vars:{MATCH_SCORE:100,MISMATCH_SCORE:-10,BEGIN_GAP_PENALTY:2,GAP_PENALTY:1,END_GAP_PENALTY:2}};for(var field in original_opt)null==opt[field]&&(opt[field]=original_opt[field]);return opt}show_seq_names(){let named=[];for(var j in this.grid)if(null!=this.grid[j])for(var i of this.grid[j])if(null!=i.seq_index){let seq_name=this.data[i.seq_index][0].seq_name;-1==named.indexOf(seq_name)&&(named.push(seq_name),this.svg.append("text").text(seq_name).attr("y",i.y*this.vertical_spacing+this.opt.padding.top+this.opt.link_stroke_width).attr("x",j*this.horizontal_spacing-this.node_width).attr("font-size","x-small").attr("text-anchor","end").attr("stroke","white").attr("stroke-width",5),this.svg.append("text").text(seq_name).attr("y",i.y*this.vertical_spacing+this.opt.padding.top+this.opt.link_stroke_width).attr("x",j*this.horizontal_spacing-this.node_width).attr("font-size","x-small").attr("text-anchor","end"))}}last_cleanup(){var lastcol=this.grid[this.grid.length-2],prevlastcol=this.grid[this.grid.length-3];lastcol.sort((a,b)=>{if(!a.isanchor&&!b.isanchor&&a.level==b.level)return prevlastcol.indexOf(a.prev_node)<prevlastcol.indexOf(b.prev_node)?-1:1});var firstcol=this.grid[1],nextfirstcol=this.grid[2];firstcol.sort((a,b)=>{if(!a.isanchor&&!b.isanchor&&a.level==b.level)return nextfirstcol.indexOf(a.next_node)<nextfirstcol.indexOf(b.next_node)?-1:1})}dna_levels(data_sequences){var m_dict={},index_dict={},count=0;for(var i in data_sequences)for(var j of data_sequences[i])null==m_dict[j.level]&&(m_dict[j.level]=String.fromCharCode(parseInt(count)+65),count++);for(var j in m_dict)index_dict[m_dict[j]]=j;var char_sequences=[];for(var day of data_sequences){day=day.filter(d=>d.level.length>1);var res_str="";for(var m of day)res_str+=m_dict[m.level];char_sequences.push(res_str)}var seq=pairwiseAlignDna(char_sequences,this.opt.pairwise_alignment_vars),res=[];for(var i in seq)res.push(index_dict[seq[i]]);return res=[...new Set(res)]}find_path(data_sequences,opt){var m_dict={},index_dict={},count=0;for(var i in data_sequences)for(var j of data_sequences[i])null==m_dict[j.type]&&(m_dict[j.type]=String.fromCharCode(parseInt(count)+65),count++);for(var j in m_dict)index_dict[m_dict[j]]=j;var char_sequences=[];for(var day of data_sequences){day=day.filter(d=>d.type.length>1);var res_str="";for(var m of day)res_str+=m_dict[m.type];char_sequences.push(res_str)}var seq=pairwiseAlignDna(char_sequences,opt),res=[];for(var i in seq)res.push(index_dict[seq[i]]);return res.unshift("source"),res.push("sink"),res}find_levels(data){let lvl=[];return data.forEach(s=>s.forEach(e=>lvl.includes(e.level)?"":lvl.push(e.level))),lvl}get_color(event){return this.opt.colorbysequence?this.opt.colorscheme[event.seq_index%this.opt.colorscheme.length]:this.opt.colorscheme[this.levels.indexOf(event.level)%this.opt.colorscheme.length]}draw_guidelines(){var line=d3.line().x(d=>d.x).y(d=>d.y);for(var level of this.levels)if(this.svg.append("path").attr("class","level-guideline").attr("stroke","#33333322").attr("stroke-width",2).attr("stroke-dasharray",5,5).attr("d",line([{x:0,y:this.start_heights[level]*this.vertical_spacing+this.opt.padding.top},{x:document.getElementById(this.svgname).clientWidth,y:this.start_heights[level]*this.vertical_spacing+this.opt.padding.top}])),this.nodes.filter(n=>n.level==level).length>0&&(this.data.length<30||this.opt.forceLevelName)){let translatey=(this.start_heights[level]+.5*this.level_heights[level])*this.vertical_spacing+this.opt.padding.top+.5*this.vertical_spacing,glvlname=this.svg.append("g").attr("transform","translate(5, "+translatey+")").attr("class","lvlname");glvlname.append("circle").attr("cx",0).attr("cy",-5).attr("r",4).attr("fill",this.opt.colorscheme[this.levels.indexOf(level)%this.opt.colorscheme.length]),glvlname.append("text").attr("x",7).attr("font-size",this.opt.fontSize).attr("fill","#555").attr("font-family","Arial").text(level)}}cleanup(threshold){do{var found=!1;for(var i in this.path){var ngroup;if("source"!=this.path[i]&&"sink"!=this.path[i])if(this.nodes.filter(n=>n.depth==i&&!n.isanchor).length<threshold){this.path.splice(i,1),this.nodes=[],this.links=[],found=!0;break}}found&&this.build()}while(found)}get_grid_order(grid){var ord=[],inverse_index_dict={},index_dict=[];let lvl_dict=[];var day_index=0;for(var i in grid)for(var j in lvl_dict[i]=[],grid[i])lvl_dict[i].push(grid[i][j].level),null==inverse_index_dict[grid[i][j].seq_index]&&(inverse_index_dict[grid[i][j].seq_index]=day_index,index_dict[day_index]=grid[i][j].seq_index,day_index++);for(var i in grid){var cur_ord=[];for(var j in grid[i])cur_ord.push(inverse_index_dict[grid[i][j].seq_index]);ord.push(cur_ord)}return[ord,index_dict,inverse_index_dict,lvl_dict]}count_crossings_from_ord(ord){for(var crossings=0,i=0;i<ord.length-1;i++)for(var j=0;j<ord[i].length;j++)for(var k=j+1;k<ord[i].length;k++)ord[i+1].indexOf(ord[i][j])>ord[i+1].indexOf(ord[i][k])&&(crossings+=1);return crossings}apply_ord(ord,grid,index_dict,date_dict){for(var i in grid)null!=ord[i]&&(grid[i]=grid[i].sort((a,b)=>ord[i].indexOf(date_dict[a.seq_index])>ord[i].indexOf(date_dict[b.seq_index])?1:-1))}apply_ord_for_ilp(ord,grid,index_dict,date_dict){for(var i in grid)null!=ord[i-1]&&(grid[i]=grid[i].sort((a,b)=>ord[i-1].indexOf(date_dict[a.seq_index])>ord[i-1].indexOf(date_dict[b.seq_index])?1:-1))}move(arr,old_index,new_index){for(;old_index<0;)old_index+=arr.length;for(;new_index<0;)new_index+=arr.length;if(new_index>=arr.length)for(var k=new_index-arr.length;1+k--;)arr.push(void 0);return arr.splice(new_index,0,arr.splice(old_index,1)[0]),arr}gen_cluster(ord,i,index_dict,grid){if(null==grid[i])return[];for(var cluster=[],j=0;j<ord[i].length;j++){var cur_node=grid[i].find(n=>n.seq_index==index_dict[ord[i][j]]&&!(n.fake_in||n.fake_out));null!=cur_node&&(cur_node.isanchor||"unknown"==cur_node.level?cluster.push(cur_node):null==cluster.find(n=>n.g==cur_node.level)?cluster.push({g:cur_node.level,nodes:[cur_node]}):cluster.find(n=>n.g==cur_node.level).nodes.push(cur_node))}return cluster}structured_to_normal_ord(structured_ord,date_dict){var res_ord=[];for(var i in structured_ord){var cur_res_ord=[];for(var j in structured_ord[i])if(null==structured_ord[i][j].g)cur_res_ord.push(date_dict[structured_ord[i][j].seq_index]);else for(var k in structured_ord[i][j].nodes)cur_res_ord.push(date_dict[structured_ord[i][j].nodes[k].seq_index]);res_ord.push(cur_res_ord)}return res_ord}wmedian_nodes_left(ord,date_dict,index_dict,grid){for(var structured_ord=[],i=0;i<ord.length;i++){var cluster=this.gen_cluster(ord,i,index_dict,grid);for(var j in cluster)if(null==cluster[j].g)cluster[j].wmean=ord[i-1].indexOf(ord[i-1].find(n=>index_dict[n]==cluster[j].seq_index));else{for(var n of(cluster[j].wmean=0,cluster[j].nodes))n.wvalue=ord[i-1].indexOf(ord[i-1].find(nn=>index_dict[nn]==n.seq_index)),cluster[j].wmean+=n.wvalue;cluster[j].nodes.sort((a,b)=>this.within_cluster_sort(a,b,"left",ord,date_dict,i)),cluster[j].wmean=cluster[j].wmean/cluster[j].nodes.length}cluster=cluster.sort((a,b)=>this.general_cluster_sort(a,b)),structured_ord.push(cluster)}return this.structured_to_normal_ord(structured_ord,date_dict)}wmedian_nodes_right(ord,date_dict,index_dict,grid){for(var structured_ord=[],i=ord.length-1;i>-1;i--){var cluster=this.gen_cluster(ord,i,index_dict,grid);for(var j in cluster)if(null!=ord[i+1])if(null==cluster[j].g)cluster[j].wmean=ord[i+1].indexOf(ord[i+1].find(n=>index_dict[n]==cluster[j].seq_index));else{for(var n of(cluster[j].wmean=0,cluster[j].nodes))n.wvalue=ord[i+1].indexOf(ord[i+1].find(nn=>index_dict[nn]==n.seq_index)),cluster[j].wmean+=n.wvalue;cluster[j].nodes.sort((a,b)=>this.within_cluster_sort(a,b,"right",ord,date_dict,i)),cluster[j].wmean=cluster[j].wmean/cluster[j].nodes.length}cluster=cluster.sort((a,b)=>this.general_cluster_sort(a,b)),structured_ord.push(cluster)}return structured_ord=structured_ord.reverse(),this.structured_to_normal_ord(structured_ord,date_dict)}wmedian_n(ord,date_dict,index_dict,grid,direction="right"){var structured_ord=[];let startindex=0,condition_end=void 0,mov=0;"right"==direction?(startindex=ord.length-1,condition_end=i=>i>-1,mov=1):(startindex=0,condition_end=i=>i<ord.length,mov=-1);for(var i=startindex;condition_end(i);"right"==direction?i--:i++){var cluster=this.gen_cluster(ord,i,index_dict,grid);for(var j in cluster)if(null!=ord[i+mov])if(null==cluster[j].g)cluster[j].wmean=ord[i+mov].indexOf(ord[i+mov].find(n=>index_dict[n]==cluster[j].seq_index));else{for(var n of(cluster[j].wmean=0,cluster[j].nodes))n.wvalue=ord[i+mov].indexOf(ord[i+mov].find(nn=>index_dict[nn]==n.seq_index)),cluster[j].wmean+=n.wvalue;cluster[j].nodes.sort((a,b)=>this.within_cluster_sort(a,b,direction,ord,date_dict,i)),cluster[j].wmean=cluster[j].wmean/cluster[j].nodes.length}cluster=cluster.sort((a,b)=>this.general_cluster_sort(a,b)),structured_ord.push(cluster)}return structured_ord=structured_ord.reverse(),this.structured_to_normal_ord(structured_ord,date_dict)}within_cluster_sort(a,b,direction,ord,index_dict,i){return a.next_node.fake_out||b.next_node.fake_out?ord[i-1].indexOf(index_dict[a.prev_node.seq_index])>ord[i-1].indexOf(index_dict[b.prev_node.seq_index])?1:-1:a.prev_node.fake_in||b.prev_node.fake_in?ord[i+1].indexOf(index_dict[a.next_node.seq_index])>ord[i+1].indexOf(index_dict[b.next_node.seq_index])?1:-1:a.wvalue>b.wvalue?1:-1}general_cluster_sort(a,b){return b.isanchor&&null!=a.g&&this.levels.indexOf(b.incoming_links[0].source.level)==this.levels.indexOf(b.outgoing_links[0].target.level)?this.levels.indexOf(b.outgoing_links[0].target.level)>this.levels.indexOf(a.g)?-1:1:a.isanchor&&null!=b.g&&this.levels.indexOf(a.incoming_links[0].source.level)==this.levels.indexOf(a.outgoing_links[0].target.level)?this.levels.indexOf(a.outgoing_links[0].target.level)>this.levels.indexOf(b.g)?1:-1:null!=a.g&&null!=b.g&&a.g!=b.g?this.levels.indexOf(a.g)>this.levels.indexOf(b.g)?1:-1:a.wmean>b.wmean?1:-1}transpose(tmpord,date_dict,index_dict,grid){console.log(date_dict),console.log(index_dict);let improved=!0;for(;improved;){improved=!1;for(let r=0;r<tmpord.length;r++)for(let i=0;i<tmpord[r].length-1;i++){let u=tmpord[r][i],v=tmpord[r][i+1],prevcross=this.count_crossings_from_ord(tmpord.slice(r-1,r+1)),nextcross;tmpord[r][i]=v,tmpord[r][i+1]=u,this.count_crossings_from_ord(tmpord.slice(r-1,r+1))<prevcross?improved=!0:(tmpord[r][i]=u,tmpord[r][i+1]=v)}}return tmpord}sort_nodes_vertically(animate=!1){for(var startDate=new Date,grid=[],max_rank=this.max_rank,curdepth=0;curdepth<max_rank;curdepth++)if(this.nodes.some(n=>n.depth==curdepth))for(var node of(grid[curdepth]=[],this.nodes.filter(n=>n.depth==curdepth)))grid[curdepth].push(node);var initial_order=this.get_grid_order(grid)[0],index_dict=this.get_grid_order(grid)[1],date_dict=this.get_grid_order(grid)[2],lvl_dict=this.get_grid_order(grid)[3],initial_crossings=this.count_crossings_from_ord(initial_order),best_crossings=1/0,best_order=initial_order;this.apply_ord(best_order,grid,index_dict,date_dict),this.grid=grid,this.opt.animate&&(this.set_nodes_y(grid),this.init_paths(),this.init_nodes(),this.position_links(0),this.position_nodes(0)),this.opt.formulate_ilp&&this.formulate_ilp(initial_order,lvl_dict);let seenResults={};for(var i=0;i<this.opt.max_iterations;i++){if(i%2==0)var tmpord=this.wmedian_nodes_left(deepClone(best_order),date_dict,index_dict,grid,"left");else var tmpord=this.wmedian_nodes_right(deepClone(best_order),date_dict,index_dict,grid,"right");let cur_crossings=this.count_crossings_from_ord(tmpord);if(null==seenResults[cur_crossings]&&(seenResults[cur_crossings]=0),seenResults[cur_crossings]+=1,3==seenResults[cur_crossings]){this.opt.verbose_stats&&console.log("num iterations: ",i,"\t final crossings: ",best_crossings,"\t time: ",((new Date).getTime()-startDate.getTime())/1e3+" s");break}cur_crossings<best_crossings&&(best_order=tmpord,best_crossings=this.count_crossings_from_ord(best_order),animate&&(this.apply_ord(best_order,grid,index_dict,date_dict),this.set_nodes_y(grid),this.position_links(1e3*(i+1)),this.position_nodes(1e3*(i+1)))),this.opt.verbose_stats&&console.log("i: ",i,"\t best crossings: ",best_crossings,"\t cur crossings: ",cur_crossings,"\t time: ",((new Date).getTime()-startDate.getTime())/1e3+" s")}return this.opt.retrieve_ilp?(best_order=getoordfromilp(this.opt.ilpdata,initial_order),console.log("ilp order: ",best_order,this.count_crossings_from_ord(best_order)),this.apply_ord_for_ilp(best_order,grid,index_dict,date_dict)):this.opt.initial_layout?this.apply_ord(initial_order,grid,index_dict,date_dict):this.apply_ord(best_order,grid,index_dict,date_dict),this.opt.verbose_ord&&(console.log("final ord:",best_order),console.log("final grid:",grid)),grid}formulate_ilp=(ord,lvl_dict)=>{lvl_dict=lvl_dict.slice(1);let mkx=(k,u1,u2)=>"x_k"+k+"_"+ +u1+"_"+u2,mkc=(k,u1,v1,u2,v2)=>"c_k"+k+"_"+u1+"_"+v1+"_"+u2+"_"+v2,res_str="",tord=ord,minimize="Minimize\n";for(let k=0;k<tord.length-1;k++)for(let u1 of tord[k]){let v1=tord[k+1].find(n=>n==u1);for(let u2 of tord[k]){if(u1==u2)continue;let v2=tord[k+1].find(n=>n==u2);minimize+=" + "+mkc(k,u1,v1,u2,v2)+" "}}minimize+="\n",res_str+=minimize;let ccount=0,subject_to="Subject To\n";for(let k in tord)for(let i1 of tord[k])for(let i2 of tord[k]){let u1=tord[k][i1],u2=tord[k][i2];u1!=u2&&(subject_to+="C"+ccount+": "+mkx(k,u1,u2)+" + "+mkx(k,u2,u1)+" = 1\n",ccount+=1)}for(let k in tord)for(let i1 in tord[k]){let u1=tord[k][i1];for(let i2 in tord[k]){let u2=tord[k][i2];if(u1!=u2)for(let i3 in tord[k]){let u3=tord[k][i3];u1!=u3&&(u2!=u3&&(subject_to+="C"+ccount+": "+mkx(k,u3,u2)+" + "+mkx(k,u2,u1)+" - "+mkx(k,u3,u1)+" <= 1\n",ccount+=1))}}}for(let k=0;k<tord.length-1;k++)for(let i1 in tord[k]){let u1=tord[k][i1],v1=tord[k+1].find(n=>n==u1);for(let i2 in tord[k]){let u2=tord[k][i2],v2=tord[k+1].find(n=>n==u2);u1!=u2&&(subject_to+="C"+ccount+": "+mkc(k,u1,v1,u2,v2)+" + "+mkx(k,u2,u1)+" + "+mkx(k+1,v1,v2)+" >= 1\n",ccount+=1,subject_to+="C"+ccount+": "+mkc(k,u1,v1,u2,v2)+" + "+mkx(k,u1,u2)+" + "+mkx(k+1,v2,v1)+" >= 1\n",ccount+=1)}}res_str+=subject_to;let bounds="Bounds\n";for(let k=0;k<tord.length;k++)for(let i1 in tord[k]){let u1=tord[k][i1],lvlu1=this.levels.indexOf(lvl_dict[k][i1]);for(let i2 in tord[k]){let u2=tord[k][i2];if(u1==u2)continue;let lvlu2=this.levels.indexOf(lvl_dict[k][i2]);1==k&&0==i1&&console.log("k:",k,"u1",u1,"lvlu1",lvlu1,"u2",u2,"lvlu2",lvlu2),lvlu1<lvlu2&&(bounds+=mkx(k,u1,u2)+" = 1\n")}}res_str+=bounds;let binaries="Binaries\n";for(let k in tord)for(let i1 of tord[k])for(let i2 of tord[k]){let u1=tord[k][i1],u2=tord[k][i2];u1!=u2&&(binaries+="x_k"+k+"_"+ +u1+"_"+u2+" ")}for(let k=0;k<tord.length-1;k++)for(let u1 of tord[k]){let v1=tord[k+1].find(n=>n==u1);for(let u2 of tord[k]){if(u1==u2)continue;let v2=tord[k+1].find(n=>n==u2);binaries+="c_k"+k+"_"+ +u1+"_"+v1+"_"+u2+"_"+v2+" "}}function saveTextAsFile(t){var textFileAsBlob=new Blob([t],{type:"text/plain"}),fileNameToSaveAs="sb.lp",downloadLink=document.createElement("a");downloadLink.download="sb.lp",downloadLink.innerHTML="Download File",null!=window.webkitURL?downloadLink.href=window.webkitURL.createObjectURL(textFileAsBlob):(downloadLink.href=window.URL.createObjectURL(textFileAsBlob),downloadLink.onclick=destroyClickedElement,downloadLink.style.display="none",document.body.appendChild(downloadLink)),downloadLink.click()}res_str+=binaries,res_str+="\nEnd",saveTextAsFile(res_str)};init_paths(){var svg=d3.select("#"+this.svgname),lineGen=d3.line().x((function(d){return d.x})).y((function(d){return d.y})).curve(d3.curveCatmullRom.alpha(this.opt.catmullromvalue));for(var sequence of this.data){var link_collection=this.links.filter(l=>l.seq_index==sequence[0].seq_index);if(0==link_collection.length)continue;var real_link_collection=link_collection.filter(l=>!l.source.fake_in&&!l.target.fake_out&&!(l.source==this.source||l.target==this.target)),len=real_link_collection.length,drawpath=[];for(var link of link_collection)link.source.fake_in&&link.target.fake_in||link.source.fake_out&&link.target.fake_out||(link.source!=this.source&&!link.source.fake_in||link.target.fake_in?(drawpath.push({x:link_collection.indexOf(link)*this.horizontal_spacing-this.node_width,y:this.data.indexOf(sequence)*this.vertical_spacing+.001*Math.random()}),drawpath.push({x:link_collection.indexOf(link)*this.horizontal_spacing,y:this.data.indexOf(sequence)*this.vertical_spacing+.001*Math.random()}),drawpath.push({x:link_collection.indexOf(link)*this.horizontal_spacing+this.node_width,y:this.data.indexOf(sequence)*this.vertical_spacing+.001*Math.random()})):drawpath.push({x:link_collection.indexOf(link)*this.horizontal_spacing,y:this.data.indexOf(sequence)*this.vertical_spacing+.001*Math.random()}));drawpath.push({x:link_collection.indexOf(link)*this.horizontal_spacing,y:this.data.indexOf(sequence)*this.vertical_spacing+.001*Math.random()}),this.gen_gradient(svg,link,len,real_link_collection);const svg_index=this.svg_index;var p=svg.append("path").datum({seq_index:sequence[0].seq_index}).attr("id","day_"+sequence[0].seq_index).attr("class","seqpath").attr("d",lineGen(drawpath)).style("stroke","url(#linear-gradient"+svg_index+"_"+link.seq_index+")").style("stroke-width",this.opt.link_stroke_width).style("opacity",this.opt.link_opacity).attr("fill","#ffffff00").on("mouseover",(function(d){d3.select(this).style("stroke","black")})).on("mouseout",(function(d){d3.select(this).style("stroke","url(#linear-gradient"+svg_index+"_"+this.id.split("_")[1]+")")}))}}position_links(delay=0,duration=1e3){var svg=d3.select("#"+this.svgname),lineGen=d3.line().x((function(d){return d.x})).y((function(d){return d.y})).curve(d3.curveCatmullRom.alpha(this.opt.catmullromvalue));for(var sequence of this.data){var link_collection=this.links.filter(l=>l.seq_index==sequence[0].seq_index);if(0!=link_collection.length){var real_link_collection,len=link_collection.filter(l=>!l.source.fake_in&&!l.target.fake_out&&!(l.source==this.source||l.target==this.target)).length,drawpath=[];for(var link of link_collection)link.source.fake_in&&link.target.fake_in||link.source.fake_out&&link.target.fake_out||(link.source!=this.source&&!link.source.fake_in||link.target.fake_in?(drawpath.push({x:this.get_node_x(link.source,this.horizontal_spacing),y:this.opt.padding.top+link.source.y*this.vertical_spacing+.001*Math.random()}),drawpath.push({x:this.node_width/2+this.get_node_x(link.source,this.horizontal_spacing),y:this.opt.padding.top+link.source.y*this.vertical_spacing+.001*Math.random()}),drawpath.push({x:this.node_width+this.get_node_x(link.source,this.horizontal_spacing),y:this.opt.padding.top+link.source.y*this.vertical_spacing+.001*Math.random()})):drawpath.push({x:this.get_node_x(link.source,this.horizontal_spacing)+(this.horizontal_spacing-this.opt.padding.left),y:this.opt.padding.top+link.target.y*this.vertical_spacing+1*Math.random()}));drawpath.push({x:drawpath[drawpath.length-1].x+this.opt.padding.left,y:drawpath[drawpath.length-1].y+.001*Math.random()}),svg.select("#day_"+sequence[0].seq_index).transition().attr("d",()=>lineGen(drawpath)).duration(duration).delay(delay)}}}init_nodes(){var svg=d3.select("#"+this.svgname);for(var node of this.nodes)svg.append("rect").datum(node).attr("id","node_"+node.seq_index+"_"+node.depth).attr("class","seqnode").attr("x",this.get_node_x(node,this.horizontal_spacing)).attr("y",this.vertical_spacing).attr("width",this.node_width).attr("height",this.vertical_spacing).attr("rx","5px").attr("fill",node.isanchor?"#ffffff00":node.color).attr("opacity",0).on("click",d=>console.log(d))}position_nodes(delay=0,duration=1e3){var svg=d3.select("#"+this.svgname);for(var node of this.nodes)svg.select("#node_"+node.seq_index+"_"+node.depth).transition().attr("x",this.get_node_x(node,this.horizontal_spacing)).attr("y",this.opt.padding.top+node.y*this.vertical_spacing-this.vertical_spacing/2).attr("opacity",.5).duration(duration).delay(delay)}add_virtual_nodes(grid){var level_heights={},start_heights={};for(var level of this.levels){for(var max_height=0,r=0;r<=this.max_rank;r++)null!=grid[r]&&(grid[r]=grid[r].filter(n=>!n.fake_in&&!n.fake_out),grid[r].filter(n=>n.level==level&&!n.fake_in&&!n.fake_out).length>max_height&&(max_height=grid[r].filter(n=>n.level==level||"unknown"==n.level).length));level_heights[level]=max_height+1}var cur_height=0;for(var level of this.levels)start_heights[level]=cur_height,cur_height+=level_heights[level];this.start_heights=start_heights,this.level_heights=level_heights;for(var r=0;r<=this.max_rank;r++)if(null!=grid[r])for(var level of this.levels){var lgroup=grid[r].filter(n=>n.level==level),diff=level_heights[level]-lgroup.length;0==lgroup.length&&(diff=level_heights[level]);for(var i=0;i<diff;i++)0!=lgroup.length?grid[r].splice(grid[r].indexOf(lgroup[lgroup.length-1])+1,0,{}):grid[r].splice(start_heights[level],0,{})}}set_nodes_y(grid){for(var node of this.nodes)null!=grid[node.depth]&&(node.y=grid[node.depth].indexOf(node))}add_node(prevnode,event,next_depth,isanchor,fake_out=!1,fake_in=!1){var new_node={level:event.level,type:event.type,color:isanchor?averageRGB(this.get_color(event),prevnode.color):this.get_color(event),incoming_links:[],outgoing_links:[],next_node:null,prev_node:prevnode,isanchor:isanchor,depth:next_depth,fake_out:fake_out,fake_in:fake_in,seq_index:event.seq_index,label:event.label},new_link={source:prevnode,target:new_node,seq_index:event.seq_index,day:event.Date};return prevnode.outgoing_links.push(new_link),prevnode.next_node=new_node,new_node.incoming_links.push(new_link),this.nodes.push(new_node),this.links.push(new_link),new_node}build(){this.source={depth:0,incoming_links:[],outgoing_links:[],color:"#fff",fake_in:!0},this.sink={depth:path.length+1,incoming_links:[],outgoing_links:[],color:"gray",fake_out:!0};var count=0;for(var sequence of this.data){var prevnode=this.source;for(var event of sequence){var index=sequence.indexOf(event);if(-1!=this.path.slice(1).slice(prevnode.depth,this.path.length).indexOf(this.path.find(n=>event.type==n))){var pdepth;if((pdepth=prevnode.depth+this.path.slice(1).slice(prevnode.depth,this.path.length).indexOf(this.path.find(n=>event.type==n)))-prevnode.depth>=0)for(var diff=pdepth-prevnode.depth,ev=0;ev<diff;ev+=1)prevnode=0==index?this.add_node(prevnode,event,pdepth-diff+ev+1,!0,!1,!0):this.add_node(prevnode,event,pdepth-diff+ev+1,!0,!1,!1);prevnode=this.add_node(prevnode,event,pdepth+1,!1)}}if(prevnode.depth!=this.path.length-1)for(var pdepth,diff=(pdepth=this.path.length-1)-prevnode.depth,ev=0;ev<diff;ev+=1)prevnode=this.add_node(prevnode,event,prevnode.depth+1,!0,!0)}}count_crossings(grid){for(var crossings=0,d=0;d<this.path.length;d++){var pcol=grid[d],ncol=grid[d+1];if(null==ncol)break;for(var n in pcol){var next_node_index=ncol.indexOf(pcol[n].next_node);for(var n2 in pcol)if(n!=n2){var next_node2_index=ncol.indexOf(pcol[n2].next_node);n>n2?next_node_index<next_node2_index&&crossings++:n<n2&&next_node_index>next_node2_index&&crossings++}}}return crossings/2}get_node_x(node){return node.depth*this.horizontal_spacing}gen_gradient(svg,link,len,real_link_collection){var defs,linearGradient=svg.append("defs").append("linearGradient").attr("id","linear-gradient"+this.svg_index+"_"+link.seq_index);for(link of(linearGradient.append("stop").attr("offset",0).attr("stop-color","#ffffff00"),0==real_link_collection.length&&linearGradient.append("stop").attr("offset",.5).attr("stop-color",link.target.color),real_link_collection))if(link.source!=this.source){var colorsource=link.source.color,colortarget=link.target.color;linearGradient.append("stop").attr("offset",5/len*.05+1*real_link_collection.indexOf(link)/len).attr("stop-color",colorsource),linearGradient.append("stop").attr("offset",5/len*.05+1*(real_link_collection.indexOf(link)+.5)/len).attr("stop-color",colortarget)}linearGradient.append("stop").attr("offset",1).attr("stop-color","#ffffff00")}add_path_text(){var svg=d3.select("#"+this.svgname);for(var e in this.path)if("source"!=this.path[e]&&"sink"!=this.path[e])var t=svg.append("text").attr("y",this.opt.path_text_y).attr("x",(d,i)=>e*this.horizontal_spacing+this.node_width/2).attr("text-anchor","middle").attr("font-family","Arial").attr("class","path_top_text").attr("font-size","0.8em").attr("fill","black").text(this.path[e])}draw(){var svg=d3.select("#"+this.svgname);this.init_nodes(),this.position_nodes(0,0),this.init_paths(svg),this.position_links(0,0)}};